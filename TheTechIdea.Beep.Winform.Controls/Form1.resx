<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="beepuiManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="beepListBox1.ListItems" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAE5UaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuQ29t
        bW9uLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwMAwAAAElTeXN0ZW0sIFZlcnNp
        b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
        BQEAAAAzVGhlVGVjaElkZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xzLkNvbW1vbi5TaW1wbGVJdGVtDAAA
        ABM8SWQ+a19fQmFja2luZ0ZpZWxkFTxOYW1lPmtfX0JhY2tpbmdGaWVsZBU8VGV4dD5rX19CYWNraW5n
        RmllbGQWPEltYWdlPmtfX0JhY2tpbmdGaWVsZBk8SXRlbVR5cGU+a19fQmFja2luZ0ZpZWxkDV9kaXNw
        bGF5RmllbGQLX3ZhbHVlRmllbGQLX3BhcmVudEl0ZW0ZPENoaWxkcmVuPmtfX0JhY2tpbmdGaWVsZBw8
        UmVmZXJlbmNlSUQ+a19fQmFja2luZ0ZpZWxkITxPd25lclJlZmVyZW5jZUlEPmtfX0JhY2tpbmdGaWVs
        ZCE8T3RoZXJSZWZlcmVuY2VJRD5rX19CYWNraW5nRmllbGQBAQEBBAEBBAQBAQE1VGhlVGVjaElkZWEu
        QmVlcC5XaW5mb3JtLkNvbnRyb2xzLkNvbW1vbi5NZW51SXRlbVR5cGUCAAAAM1RoZVRlY2hJZGVhLkJl
        ZXAuV2luZm9ybS5Db250cm9scy5Db21tb24uU2ltcGxlSXRlbQIAAACqAVN5c3RlbS5Db21wb25lbnRN
        b2RlbC5CaW5kaW5nTGlzdGAxW1tUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuQ29tbW9u
        LlNpbXBsZUl0ZW0sIFRoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250cm9scy5Db21tb24sIEN1bHR1
        cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dAwAAAAIAAAAGBAAAACRhNTllYWM3Yy05NmVj
        LTQzYzktYTU0MS02MWQ2MDc3ZjU2MmMKCgoF+////zVUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29u
        dHJvbHMuQ29tbW9uLk1lbnVJdGVtVHlwZQEAAAAHdmFsdWVfXwAIAgAAAAAAAAAKCgoJBgAAAAoKCgUG
        AAAAqgFTeXN0ZW0uQ29tcG9uZW50TW9kZWwuQmluZGluZ0xpc3RgMVtbVGhlVGVjaElkZWEuQmVlcC5X
        aW5mb3JtLkNvbnRyb2xzLkNvbW1vbi5TaW1wbGVJdGVtLCBUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0u
        Q29udHJvbHMuQ29tbW9uLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxdXQgAAAAJ
        YWRkTmV3UG9zFnJhaXNlTGlzdENoYW5nZWRFdmVudHMWcmFpc2VJdGVtQ2hhbmdlZEV2ZW50cwhhbGxv
        d05ldwlhbGxvd0VkaXQLYWxsb3dSZW1vdmUPdXNlclNldEFsbG93TmV3EkNvbGxlY3Rpb25gMStpdGVt
        cwAAAAAAAAADCAEBAQEBAagBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tUaGVUZWNo
        SWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuQ29tbW9uLlNpbXBsZUl0ZW0sIFRoZVRlY2hJZGVhLkJl
        ZXAuV2luZm9ybS5Db250cm9scy5Db21tb24sIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
        bnVsbF1dAwAAAP////8BAAEBAQAJBwAAAAwIAAAAX1RoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250
        cm9scy5Db21tb24sIFZlcnNpb249MS4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
        bj1udWxsBAcAAACoAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbVGhlVGVjaElkZWEu
        QmVlcC5XaW5mb3JtLkNvbnRyb2xzLkNvbW1vbi5TaW1wbGVJdGVtLCBUaGVUZWNoSWRlYS5CZWVwLldp
        bmZvcm0uQ29udHJvbHMuQ29tbW9uLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxd
        XQMAAAAGX2l0ZW1zBV9zaXplCF92ZXJzaW9uBAAANVRoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250
        cm9scy5Db21tb24uU2ltcGxlSXRlbVtdCAAAAAgICQkAAAAAAAAAAAAAAAcJAAAAAAEAAAAAAAAABDNU
        aGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuQ29tbW9uLlNpbXBsZUl0ZW0CAAAACw==
</value>
  </data>
  <data name="beepListBox1.ListItems1" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAE5UaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuQ29t
        bW9uLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwMAwAAAElTeXN0ZW0sIFZlcnNp
        b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
        BQEAAAAzVGhlVGVjaElkZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xzLkNvbW1vbi5TaW1wbGVJdGVtDAAA
        ABM8SWQ+a19fQmFja2luZ0ZpZWxkFTxOYW1lPmtfX0JhY2tpbmdGaWVsZBU8VGV4dD5rX19CYWNraW5n
        RmllbGQWPEltYWdlPmtfX0JhY2tpbmdGaWVsZBk8SXRlbVR5cGU+a19fQmFja2luZ0ZpZWxkDV9kaXNw
        bGF5RmllbGQLX3ZhbHVlRmllbGQLX3BhcmVudEl0ZW0ZPENoaWxkcmVuPmtfX0JhY2tpbmdGaWVsZBw8
        UmVmZXJlbmNlSUQ+a19fQmFja2luZ0ZpZWxkITxPd25lclJlZmVyZW5jZUlEPmtfX0JhY2tpbmdGaWVs
        ZCE8T3RoZXJSZWZlcmVuY2VJRD5rX19CYWNraW5nRmllbGQBAQEBBAEBBAQBAQE1VGhlVGVjaElkZWEu
        QmVlcC5XaW5mb3JtLkNvbnRyb2xzLkNvbW1vbi5NZW51SXRlbVR5cGUCAAAAM1RoZVRlY2hJZGVhLkJl
        ZXAuV2luZm9ybS5Db250cm9scy5Db21tb24uU2ltcGxlSXRlbQIAAACqAVN5c3RlbS5Db21wb25lbnRN
        b2RlbC5CaW5kaW5nTGlzdGAxW1tUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuQ29tbW9u
        LlNpbXBsZUl0ZW0sIFRoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250cm9scy5Db21tb24sIEN1bHR1
        cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dAwAAAAIAAAAGBAAAACQzOGZhYjE3NC0zNTlm
        LTQzM2QtYmNjZC0wOGI1MWRlNDgyZjMKCgoF+////zVUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29u
        dHJvbHMuQ29tbW9uLk1lbnVJdGVtVHlwZQEAAAAHdmFsdWVfXwAIAgAAAAAAAAAKCgoJBgAAAAoKCgUG
        AAAAqgFTeXN0ZW0uQ29tcG9uZW50TW9kZWwuQmluZGluZ0xpc3RgMVtbVGhlVGVjaElkZWEuQmVlcC5X
        aW5mb3JtLkNvbnRyb2xzLkNvbW1vbi5TaW1wbGVJdGVtLCBUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0u
        Q29udHJvbHMuQ29tbW9uLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxdXQgAAAAJ
        YWRkTmV3UG9zFnJhaXNlTGlzdENoYW5nZWRFdmVudHMWcmFpc2VJdGVtQ2hhbmdlZEV2ZW50cwhhbGxv
        d05ldwlhbGxvd0VkaXQLYWxsb3dSZW1vdmUPdXNlclNldEFsbG93TmV3EkNvbGxlY3Rpb25gMStpdGVt
        cwAAAAAAAAADCAEBAQEBAagBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tUaGVUZWNo
        SWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuQ29tbW9uLlNpbXBsZUl0ZW0sIFRoZVRlY2hJZGVhLkJl
        ZXAuV2luZm9ybS5Db250cm9scy5Db21tb24sIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
        bnVsbF1dAwAAAP////8BAAEBAQAJBwAAAAwIAAAAX1RoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250
        cm9scy5Db21tb24sIFZlcnNpb249MS4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
        bj1udWxsBAcAAACoAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbVGhlVGVjaElkZWEu
        QmVlcC5XaW5mb3JtLkNvbnRyb2xzLkNvbW1vbi5TaW1wbGVJdGVtLCBUaGVUZWNoSWRlYS5CZWVwLldp
        bmZvcm0uQ29udHJvbHMuQ29tbW9uLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxd
        XQMAAAAGX2l0ZW1zBV9zaXplCF92ZXJzaW9uBAAANVRoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250
        cm9scy5Db21tb24uU2ltcGxlSXRlbVtdCAAAAAgICQkAAAAAAAAAAAAAAAcJAAAAAAEAAAAAAAAABDNU
        aGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuQ29tbW9uLlNpbXBsZUl0ZW0CAAAACw==
</value>
  </data>
</root>