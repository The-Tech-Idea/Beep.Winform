<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="beepuiManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="beepSideMenu1.Items" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEdUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMsIEN1
        bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbAwDAAAASVN5c3RlbSwgVmVyc2lvbj00LjAu
        MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAADlU
        aGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuU2ltcGxlTWVudUl0ZW0MAAAA
        EzxJZD5rX19CYWNraW5nRmllbGQVPE5hbWU+a19fQmFja2luZ0ZpZWxkFTxUZXh0PmtfX0JhY2tpbmdG
        aWVsZBY8SW1hZ2U+a19fQmFja2luZ0ZpZWxkGTxJdGVtVHlwZT5rX19CYWNraW5nRmllbGQNX2Rpc3Bs
        YXlGaWVsZAtfdmFsdWVGaWVsZAtfcGFyZW50SXRlbRk8Q2hpbGRyZW4+a19fQmFja2luZ0ZpZWxkHDxS
        ZWZlcmVuY2VJRD5rX19CYWNraW5nRmllbGQhPE93bmVyUmVmZXJlbmNlSUQ+a19fQmFja2luZ0ZpZWxk
        ITxPdGhlclJlZmVyZW5jZUlEPmtfX0JhY2tpbmdGaWVsZAEBAQEEAQEEBAEBATdUaGVUZWNoSWRlYS5C
        ZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuTWVudUl0ZW1UeXBlAgAAADlUaGVUZWNoSWRlYS5C
        ZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuU2ltcGxlTWVudUl0ZW0CAAAAqQFTeXN0ZW0uQ29t
        cG9uZW50TW9kZWwuQmluZGluZ0xpc3RgMVtbVGhlVGVjaElkZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xz
        LlRlbXBsYXRlLlNpbXBsZU1lbnVJdGVtLCBUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMs
        IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dAwAAAAIAAAAGBAAAACQwMjllOTJh
        YS03ODVlLTQwMmEtYjdmZC00ODZiMGUyZWRlMjUKBgUAAAAFdGVzdDEGBgAAAHVIOlxkZXZcaWNvblBh
        Y2tzXDEwMDA3ODUyLXRlYW0tbWFuYWdlbWVudCAoMikgKDEpXDEwMDA3ODU2LXRlYW0tbWFuYWdlbWVu
        dFwxMDAwNzg1Ni10ZWFtLW1hbmFnZW1lbnRcc3ZnXDAwNS1tb25leS5zdmcF+f///zdUaGVUZWNoSWRl
        YS5CZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuTWVudUl0ZW1UeXBlAQAAAAd2YWx1ZV9fAAgC
        AAAAAAAAAAoKCgkIAAAACgoKBQgAAACpAVN5c3RlbS5Db21wb25lbnRNb2RlbC5CaW5kaW5nTGlzdGAx
        W1tUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuU2ltcGxlTWVudUl0ZW0s
        IFRoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250cm9scywgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
        ZXlUb2tlbj1udWxsXV0IAAAACWFkZE5ld1BvcxZyYWlzZUxpc3RDaGFuZ2VkRXZlbnRzFnJhaXNlSXRl
        bUNoYW5nZWRFdmVudHMIYWxsb3dOZXcJYWxsb3dFZGl0C2FsbG93UmVtb3ZlD3VzZXJTZXRBbGxvd05l
        dxJDb2xsZWN0aW9uYDEraXRlbXMAAAAAAAAAAwgBAQEBAQGnAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5l
        cmljLkxpc3RgMVtbVGhlVGVjaElkZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xzLlRlbXBsYXRlLlNpbXBs
        ZU1lbnVJdGVtLCBUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMsIEN1bHR1cmU9bmV1dHJh
        bCwgUHVibGljS2V5VG9rZW49bnVsbF1dAwAAAP////8BAAEBAQAJCQAAAAwKAAAAWlRoZVRlY2hJZGVh
        LkJlZXAuV2luZm9ybS5Db250cm9scywgVmVyc2lvbj0xLjAuMTYzLjAsIEN1bHR1cmU9bmV1dHJhbCwg
        UHVibGljS2V5VG9rZW49bnVsbAQJAAAApwFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFb
        W1RoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250cm9scy5UZW1wbGF0ZS5TaW1wbGVNZW51SXRlbSwg
        VGhlVGVjaElkZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xzLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
        eVRva2VuPW51bGxdXQMAAAAGX2l0ZW1zBV9zaXplCF92ZXJzaW9uBAAAO1RoZVRlY2hJZGVhLkJlZXAu
        V2luZm9ybS5Db250cm9scy5UZW1wbGF0ZS5TaW1wbGVNZW51SXRlbVtdCgAAAAgICQsAAAAAAAAAAAAA
        AAcLAAAAAAEAAAAAAAAABDlUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUu
        U2ltcGxlTWVudUl0ZW0CAAAACw==
</value>
  </data>
  <data name="beepSideMenu1.Items1" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEdUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMsIEN1
        bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbAwDAAAASVN5c3RlbSwgVmVyc2lvbj00LjAu
        MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAADlU
        aGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuU2ltcGxlTWVudUl0ZW0MAAAA
        EzxJZD5rX19CYWNraW5nRmllbGQVPE5hbWU+a19fQmFja2luZ0ZpZWxkFTxUZXh0PmtfX0JhY2tpbmdG
        aWVsZBY8SW1hZ2U+a19fQmFja2luZ0ZpZWxkGTxJdGVtVHlwZT5rX19CYWNraW5nRmllbGQNX2Rpc3Bs
        YXlGaWVsZAtfdmFsdWVGaWVsZAtfcGFyZW50SXRlbRk8Q2hpbGRyZW4+a19fQmFja2luZ0ZpZWxkHDxS
        ZWZlcmVuY2VJRD5rX19CYWNraW5nRmllbGQhPE93bmVyUmVmZXJlbmNlSUQ+a19fQmFja2luZ0ZpZWxk
        ITxPdGhlclJlZmVyZW5jZUlEPmtfX0JhY2tpbmdGaWVsZAEBAQEEAQEEBAEBATdUaGVUZWNoSWRlYS5C
        ZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuTWVudUl0ZW1UeXBlAgAAADlUaGVUZWNoSWRlYS5C
        ZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuU2ltcGxlTWVudUl0ZW0CAAAAqQFTeXN0ZW0uQ29t
        cG9uZW50TW9kZWwuQmluZGluZ0xpc3RgMVtbVGhlVGVjaElkZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xz
        LlRlbXBsYXRlLlNpbXBsZU1lbnVJdGVtLCBUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMs
        IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dAwAAAAIAAAAGBAAAACRmYjI1M2E1
        NS1jZTcxLTRhZDMtYjJiNC1jNWIzOWMxOGMzZmIKBgUAAAAFdGVzdDIGBgAAAHZIOlxkZXZcaWNvblBh
        Y2tzXDEwMDA3ODUyLXRlYW0tbWFuYWdlbWVudCAoMikgKDEpXDEwMDA3ODU2LXRlYW0tbWFuYWdlbWVu
        dFwxMDAwNzg1Ni10ZWFtLW1hbmFnZW1lbnRcc3ZnXDAxOC1wdXp6bGUuc3ZnBfn///83VGhlVGVjaElk
        ZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xzLlRlbXBsYXRlLk1lbnVJdGVtVHlwZQEAAAAHdmFsdWVfXwAI
        AgAAAAAAAAAKCgoJCAAAAAoKCgUIAAAAqQFTeXN0ZW0uQ29tcG9uZW50TW9kZWwuQmluZGluZ0xpc3Rg
        MVtbVGhlVGVjaElkZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xzLlRlbXBsYXRlLlNpbXBsZU1lbnVJdGVt
        LCBUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
        S2V5VG9rZW49bnVsbF1dCAAAAAlhZGROZXdQb3MWcmFpc2VMaXN0Q2hhbmdlZEV2ZW50cxZyYWlzZUl0
        ZW1DaGFuZ2VkRXZlbnRzCGFsbG93TmV3CWFsbG93RWRpdAthbGxvd1JlbW92ZQ91c2VyU2V0QWxsb3dO
        ZXcSQ29sbGVjdGlvbmAxK2l0ZW1zAAAAAAAAAAMIAQEBAQEBpwFTeXN0ZW0uQ29sbGVjdGlvbnMuR2Vu
        ZXJpYy5MaXN0YDFbW1RoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250cm9scy5UZW1wbGF0ZS5TaW1w
        bGVNZW51SXRlbSwgVGhlVGVjaElkZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xzLCBDdWx0dXJlPW5ldXRy
        YWwsIFB1YmxpY0tleVRva2VuPW51bGxdXQMAAAD/////AQABAQEACQkAAAAMCgAAAFpUaGVUZWNoSWRl
        YS5CZWVwLldpbmZvcm0uQ29udHJvbHMsIFZlcnNpb249MS4wLjE2My4wLCBDdWx0dXJlPW5ldXRyYWws
        IFB1YmxpY0tleVRva2VuPW51bGwECQAAAKcBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAx
        W1tUaGVUZWNoSWRlYS5CZWVwLldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuU2ltcGxlTWVudUl0ZW0s
        IFRoZVRlY2hJZGVhLkJlZXAuV2luZm9ybS5Db250cm9scywgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
        ZXlUb2tlbj1udWxsXV0DAAAABl9pdGVtcwVfc2l6ZQhfdmVyc2lvbgQAADtUaGVUZWNoSWRlYS5CZWVw
        LldpbmZvcm0uQ29udHJvbHMuVGVtcGxhdGUuU2ltcGxlTWVudUl0ZW1bXQoAAAAICAkLAAAAAAAAAAAA
        AAAHCwAAAAABAAAAAAAAAAQ5VGhlVGVjaElkZWEuQmVlcC5XaW5mb3JtLkNvbnRyb2xzLlRlbXBsYXRl
        LlNpbXBsZU1lbnVJdGVtAgAAAAs=
</value>
  </data>
</root>